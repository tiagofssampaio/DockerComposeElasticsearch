version: '2.2'
services:
  esmaster:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: ${ELK_VERSION:-7.14.0}
    container_name: esmaster
    environment:
      - node.name=esmaster
      - cluster.name=elastic-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=esmaster
      - bootstrap.memory_lock=true
      - node.roles=master
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic

  es01:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: ${ELK_VERSION:-7.14.0}
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=elastic-cluster
      - discovery.seed_hosts=esmaster,es02
      - cluster.initial_master_nodes=esmaster
      - bootstrap.memory_lock=true
      - node.roles=data_hot
      - "ES_JAVA_OPTS=-Xms16g -Xmx16g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    networks:
      - elastic

  es02:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: ${ELK_VERSION:-7.14.0}
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=elastic-cluster
      - discovery.seed_hosts=esmaster,es01
      - cluster.initial_master_nodes=esmaster
      - bootstrap.memory_lock=true
      - node.roles=data
      - "ES_JAVA_OPTS=-Xms8g -Xmx8g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
    networks:
      - elastic

  kib01:
    build:
      context: kibana/
      args:
        ELK_VERSION: ${ELK_VERSION:-7.14.0}
    container_name: kib01
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - 5601:5601
    networks:
      - elastic

  web_server:
    build:
      context: ./nginx
    restart: always
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/htpasswd.users:/etc/nginx/htpasswd.users

volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local

networks:
  elastic:
    driver: bridge